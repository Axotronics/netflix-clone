[{"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\App.js":"1","C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\reportWebVitals.js":"2","C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\Row.js":"3","C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\axios.js":"4","C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\Banner.js":"5","C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\Nav.js":"6","C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\index.js":"7","C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\requests.js":"8"},{"size":905,"mtime":1606448254505,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1948,"mtime":1606454012509,"results":"12","hashOfConfig":"10"},{"size":142,"mtime":1606365955824,"results":"13","hashOfConfig":"10"},{"size":1640,"mtime":1606445238349,"results":"14","hashOfConfig":"10"},{"size":772,"mtime":1606451603589,"results":"15","hashOfConfig":"10"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"10"},{"size":722,"mtime":1606365665857,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iztes5",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\App.js",[],"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\reportWebVitals.js",[],"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\Row.js",["36"],"import React, {useState, useEffect} from 'react'\r\nimport YouTube from 'react-youtube';\r\nimport axios from './axios';\r\nimport './Row.css'\r\nimport movieTrailer from \"movie-trailer\"; \r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            const request = await axios.get(fetchUrl);\r\n            \r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchdata();\r\n\r\n    }, [fetchUrl]);\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl('')\r\n        }\r\n        else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then(url => {\r\n                const urlParams = new  URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n\r\n            }).catch((error) => console.log(error));\r\n        }\r\n    }\r\n\r\n    console.log(movies);\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>  {title} </h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img\r\n                    key={movie.id}\r\n                    onClick = { () => handleClick(movie)}\r\n                    \r\n                    className={`\"row__poster\" ${isLargeRow && \"row__posterLarge\"}`}\r\n                    className=\"row__poster\"\r\n                    src={`${base_url}${ isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n                </div>\r\n                { trailerUrl &&  <YouTube videoId={trailerUrl} opts={opts} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n",["37","38"],"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\axios.js",[],"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\Banner.js",[],"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\Nav.js",[],"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\index.js",[],"C:\\Users\\aksha\\Desktop\\netflix\\netflix\\src\\requests.js",[],{"ruleId":"39","severity":1,"message":"40","line":54,"column":21,"nodeType":"41","endLine":54,"endColumn":44},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-global-assign","no-unsafe-negation"]